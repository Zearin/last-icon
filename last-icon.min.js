const CACHE={},ALIASES=Object.assign({bs:"bootstrap",bx:"boxicons",cs:"cssgg",gg:"cssgg",tb:"tabler",fa:"fontawesome",st:"supertiny",mi:"material",em:"emojicc",fl:"flags"},window.LastIcon&&window.LastIcon.aliases||{}),TYPES=Object.assign({boxicons:"solid",fontawesome:"solid",material:"baseline",flags:"4x3"},window.LastIcon&&window.LastIcon.types||{}),PREFIXES=Object.assign({boxicons:{solid:"bxs",regular:"bx",logos:"bxl"}},window.LastIcon&&window.LastIcon.prefixes||{}),DEFAULT_SET=window.LastIcon&&window.LastIcon.defaultSet||"tabler",DEFAULT_STROKE=window.LastIcon&&window.LastIcon.defaultStroke||2,PATHS=Object.assign({bootstrap:"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/icons/{icon}.svg",boxicons:"https://cdn.jsdelivr.net/npm/boxicons@2.0.7/svg/{type}/{prefix}-{icon}.svg",cssgg:"https://cdn.jsdelivr.net/npm/css.gg@2.0.0/icons/svg/{icon}.svg",tabler:"https://cdn.jsdelivr.net/npm/@tabler/icons@1.41.2/icons/{icon}.svg",fontawesome:"https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.3/svgs/{type}/{icon}.svg",bytesize:"https://cdn.jsdelivr.net/npm/bytesize-icons@1.4.0/dist/icons/{icon}.svg",supertiny:"https://cdn.jsdelivr.net/npm/super-tiny-icons@0.4.0/images/svg/{icon}.svg",material:"https://cdn.jsdelivr.net/npm/@material-icons/svg@1.0.10/svg/{icon}/{type}.svg",flags:"https://cdn.jsdelivr.net/npm/flag-svg-collection@1.1.0/flags/{type}/{icon}.svg",emojicc:"https://cdn.jsdelivr.net/npm/emoji-cc@1.0.1/svg/{icon}.svg"},window.LastIcon&&window.LastIcon.paths||{});class LastIcon extends HTMLElement{constructor(){super()}static getIconSvg(t,s,e){let n=PREFIXES[s]&&PREFIXES[s][e]||null,o=PATHS[s];return o?(o=o.replace("{icon}",t),e&&(o=o.replace("{type}",e)),n&&(o=o.replace("{prefix}",n)),o&&CACHE[o]?CACHE[o]:(CACHE[o]=fetch(o).then(function(t){if(200===t.status)return t.text();throw Error(t.status)}),CACHE[o])):new Promise(()=>{console.error(`Icon set ${s} does not exists`)})}get type(){let t=this.getAttribute("type");return t=t||TYPES[this.set],t}get set(){let t=this.getAttribute("set")||DEFAULT_SET;return ALIASES[t]&&(t=ALIASES[t]),t}get stroke(){let t=this.getAttribute("stroke");return t||"tabler"!=this.set||(t=DEFAULT_STROKE),t}static get observedAttributes(){return["name"]}attributeChangedCallback(t,s,e){this.innerHTML="";let n=this.set,o=this.type;e&&this.constructor.getIconSvg(e,n,o).then(t=>{this.stroke&&(t=t.replace(/stroke-width="([0-9]*)"/,'stroke-width="'+this.stroke+'"')),this.innerHTML=t}).catch(t=>{this.innerHTML="⚠️",console.error(`Failed to load icon ${e} (error ${t})`)})}connectedCallback(){}}customElements.define("l-i",LastIcon);export default LastIcon;