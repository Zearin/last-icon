const CACHE={},DEBUG=window.LastIcon&&window.LastIcon.debug||!1,PRELOAD=window.LastIconPreload||{},FIX_FILL=["material","boxicons","fontawesome"],ALIASES=Object.assign({bs:"bootstrap",bx:"boxicons",cs:"cssgg",gg:"cssgg",tb:"tabler",fa:"fontawesome",st:"supertiny",mi:"material",em:"emojicc",fl:"flags",in:"iconoir"},window.LastIcon&&window.LastIcon.aliases||{}),ENABLE_ICONS=window.LastIcon&&window.LastIcon.fonts||[],FONT_ICONS={material:{class:"material-icons-{type}",types:{baseline:"",twotone:"two-tone"}},boxicons:{class:"bx {prefix}-{icon}"},bootstrap:{class:"bi-{icon}"},fontawesome:{class:"{prefix} fa-{icon}"},iconoir:{class:"iconoir-{icon}"}},TYPES=Object.assign({boxicons:"solid",fontawesome:"solid",material:"baseline",flags:"4x3"},window.LastIcon&&window.LastIcon.types||{}),PREFIXES=Object.assign({boxicons:{solid:"bxs",regular:"bx",logos:"bxl"},fontawesome:{solid:"fas",regular:"far",light:"fal",duotone:"fad",brands:"fab"}},window.LastIcon&&window.LastIcon.prefixes||{}),DEFAULT_SET=window.LastIcon&&window.LastIcon.defaultSet||"tabler",DEFAULT_STROKE=window.LastIcon&&window.LastIcon.defaultStroke||2,PATHS=Object.assign({bootstrap:"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/icons/{icon}.svg",boxicons:"https://cdn.jsdelivr.net/npm/boxicons@2.0.7/svg/{type}/{prefix}-{icon}.svg",cssgg:"https://cdn.jsdelivr.net/npm/css.gg@2.0.0/icons/svg/{icon}.svg",tabler:"https://cdn.jsdelivr.net/npm/@tabler/icons@1.41.2/icons/{icon}.svg",fontawesome:"https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.15.3/svgs/{type}/{icon}.svg",bytesize:"https://cdn.jsdelivr.net/npm/bytesize-icons@1.4.0/dist/icons/{icon}.svg",supertiny:"https://cdn.jsdelivr.net/npm/super-tiny-icons@0.4.0/images/svg/{icon}.svg",material:"https://cdn.jsdelivr.net/npm/@material-icons/svg@1.0.10/svg/{icon}/{type}.svg",flags:"https://cdn.jsdelivr.net/npm/flag-svg-collection@1.1.0/flags/{type}/{icon}.svg",emojicc:"https://cdn.jsdelivr.net/npm/emoji-cc@1.0.1/svg/{icon}.svg",iconoir:"https://cdn.jsdelivr.net/gh/lucaburgio/iconoir/icons/{icon}.svg"},window.LastIcon&&window.LastIcon.paths||{});class LastIcon extends HTMLElement{constructor(){super()}static log(t){DEBUG&&console.log("[l-i] "+t)}static getIconSvg(t,s,e){let o=PATHS[s],n=s+"-"+t;return e&&(n+="-"+e),PRELOAD[n]?(LastIcon.log("Fetching "+n+" from preloaded cache"),PRELOAD[n]):o?(o=LastIcon.replacePlaceholders(o,t,s,e),o&&CACHE[n]?(LastIcon.log("Fetching "+n+" from cache"),CACHE[n]):(LastIcon.log("Fetching "+n+" from url "+o),CACHE[n]=fetch(o).then(function(t){if(200===t.status)return t.text();throw Error(t.status)}),CACHE[n])):new Promise(()=>{console.error(`Icon set ${s} does not exists`)})}static replacePlaceholders(t,s,e,o){let n=PREFIXES[e]&&PREFIXES[e][o]||null;return t=t.replace("{icon}",s),t=o?t.replace("{type}",o):t.replace("-{type}",""),n&&(t=t.replace("{prefix}",n)),t}static refreshIcon(t,s,e,o){if(ENABLE_ICONS.includes(e)){LastIcon.log("Using font for "+s);let n=FONT_ICONS[e].class,i=n.includes("{icon}"),c=o;return FONT_ICONS[e].types&&o in FONT_ICONS[e].types&&(c=FONT_ICONS[e].types[o]),n=LastIcon.replacePlaceholders(n,s,e,c),void(t.innerHTML=i?'<i class="'+n+'"></i>':'<i class="'+n+'">'+s+"</i>")}LastIcon.getIconSvg(s,e,o).then(s=>{t.stroke&&(s=s.replace(/stroke-width="([0-9]*)"/,'stroke-width="'+t.stroke+'"')),FIX_FILL.includes(t.set)&&(s=s.replace(/(<svg.*?)>/,'$1 fill="currentColor">')),t.innerHTML=s}).catch(e=>{t.innerHTML="⚠️",console.error(`Failed to load icon ${s} (error ${e})`)})}get type(){let t=this.getAttribute("type");return t=t||TYPES[this.set],t}get set(){let t=this.getAttribute("set")||DEFAULT_SET;return ALIASES[t]&&(t=ALIASES[t]),t}get stroke(){let t=this.getAttribute("stroke");return t||"tabler"!=this.set||(t=DEFAULT_STROKE),t}static get observedAttributes(){return["name"]}attributeChangedCallback(t,s,e){this.innerHTML="";let o=this.set,n=this.type;e&&LastIcon.refreshIcon(this,e,o,n)}connectedCallback(){}}customElements.define("l-i",LastIcon);