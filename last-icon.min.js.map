{
  "version": 3,
  "sources": ["last-icon.js"],
  "sourcesContent": ["const JSDELIVR = \"https://cdn.jsdelivr.net/\";\r\n\r\n/**\r\n * @typedef Options\r\n * @property {Boolean} debug Should we output messages to console\r\n * @property {Boolean} lazy Load icons lazily\r\n * @property {Object} replaceName Transparently replace icons with other values\r\n * @property {Object} aliases Icon sets aliases for ease of use\r\n * @property {Array} fonts Icon sets using font icons rather than svg\r\n * @property {Object} viewboxes View box values if not set in icon set\r\n * @property {Object} prefixes Types prefixes in each icon set\r\n * @property {Object} defaultTypes Default types for each icon set\r\n * @property {String} defaultSet Default icon set\r\n * @property {Number} defaultStroke Default stroke used\r\n * @property {Object} paths Svg loading paths\r\n * @property {Array} fixFill Fix fill for these sets\r\n * @property {Array} fixStroke Fix stroke for these sets\r\n * @property {Array} fixViewbox Fix viewbox for these sets\r\n */\r\nconst options = {\r\n  debug: false,\r\n  lazy: true,\r\n  replaceName: {},\r\n  aliases: {\r\n    bs: \"bootstrap\",\r\n    bx: \"boxicons\",\r\n    cs: \"cssgg\",\r\n    gg: \"cssgg\",\r\n    tb: \"tabler\",\r\n    fa: \"fontawesome\",\r\n    st: \"supertiny\",\r\n    mi: \"material\",\r\n    em: \"emojicc\",\r\n    fl: \"flags\",\r\n    in: \"iconoir\",\r\n    eo: \"eos\",\r\n    ft: \"feather\",\r\n    ip: \"iconpark\",\r\n    ph: \"phosphor\",\r\n    ms: \"symbols\",\r\n  },\r\n  fonts: [],\r\n  viewboxes: {\r\n    boxicons: 24,\r\n    symbols: 48,\r\n  },\r\n  defaultTypes: {\r\n    boxicons: \"solid\",\r\n    fontawesome: \"solid\",\r\n    material: \"baseline\",\r\n    flags: \"4x3\",\r\n    eos: \"solid\",\r\n    phosphor: \"regular\",\r\n    symbols: \"outlined\",\r\n  },\r\n  prefixes: {\r\n    boxicons: {\r\n      solid: \"bxs\",\r\n      regular: \"bx\",\r\n      logos: \"bxl\",\r\n    },\r\n    fontawesome: {\r\n      solid: \"fas\",\r\n      regular: \"far\",\r\n      light: \"fal\",\r\n      duotone: \"fad\",\r\n      brands: \"fab\",\r\n    },\r\n  },\r\n  defaultSet: \"tabler\",\r\n  defaultStroke: 2,\r\n  paths: {\r\n    bootstrap: JSDELIVR + \"npm/bootstrap-icons@1/icons/{icon}.svg\",\r\n    // type: solid, regular, logos\r\n    boxicons: JSDELIVR + \"npm/boxicons@2/svg/{type}/{prefix}-{icon}.svg\",\r\n    cssgg: JSDELIVR + \"npm/css.gg@2/icons/svg/{icon}.svg\",\r\n    tabler: JSDELIVR + \"npm/@tabler/icons@1/icons/{icon}.svg\",\r\n    // type: solid, regular, brands, light, duotone\r\n    fontawesome: JSDELIVR + \"npm/@fortawesome/fontawesome-free@5/svgs/{type}/{icon}.svg\",\r\n    bytesize: JSDELIVR + \"npm/bytesize-icons@1/dist/icons/{icon}.svg\",\r\n    supertiny: JSDELIVR + \"npm/super-tiny-icons@0.4/images/svg/{icon}.svg\",\r\n    // type: baseline, outline, round, sharp, twotone\r\n    material: JSDELIVR + \"npm/@material-icons/svg@1/svg/{icon}/{type}.svg\",\r\n    // type : 4x3 or 1x1\r\n    flags: JSDELIVR + \"npm/flag-svg-collection@1/flags/{type}/{icon}.svg\",\r\n    emojicc: JSDELIVR + \"npm/emoji-cc@1/svg/{icon}.svg\",\r\n    iconoir: JSDELIVR + \"gh/lucaburgio/iconoir/icons/{icon}.svg\",\r\n    // type: solid, outlined, animated\r\n    eos: JSDELIVR + \"gh/lekoala/eos-icons-mirror/{type}/{icon}.svg\",\r\n    feather: JSDELIVR + \"npm/feather-icons@4/dist/icons/{icon}.svg\",\r\n    // type: 33 types ! see website\r\n    iconpark: JSDELIVR + \"gh/bytedance/IconPark/source/{type}/{icon}.svg\",\r\n    // type: bold, duotone, fill, light, regular, thin\r\n    phosphor: JSDELIVR + \"gh/phosphor-icons/phosphor-icons@1/assets/{type}/{icon}-{type}.svg\",\r\n    // type: outlined, rounded, sharp\r\n    symbols: JSDELIVR + \"npm/@material-symbols/svg-400@0.2.13/{type}/{icon}.svg\",\r\n  },\r\n  fixFill: [\"material\", \"boxicons\", \"fontawesome\", \"eos\", \"phosphor\", \"symbols\"],\r\n  fixStroke: [\"iconpark\"],\r\n  fixViewbox: [\"boxicons\", \"symbols\"],\r\n  strokeSet: [\"tabler\", \"iconpark\"],\r\n  opticalFont: [\"symbols\"],\r\n};\r\n\r\nconst CACHE = {};\r\nconst FONT_ICONS = {\r\n  material: {\r\n    class: \"material-icons-{type}\",\r\n    types: {\r\n      baseline: \"\",\r\n      twotone: \"two-tone\",\r\n      outline: \"outlined\",\r\n    },\r\n  },\r\n  symbols: {\r\n    class: \"material-symbols-{type}\",\r\n  },\r\n  boxicons: {\r\n    class: \"bx {prefix}-{icon}\",\r\n  },\r\n  bootstrap: {\r\n    class: \"bi-{icon}\",\r\n  },\r\n  fontawesome: {\r\n    class: \"{prefix} fa-{icon}\",\r\n  },\r\n  iconoir: {\r\n    class: \"iconoir-{icon}\",\r\n  },\r\n  eos: {\r\n    class: \"eos-icons-{type}\",\r\n    types: {\r\n      solid: \"\",\r\n    },\r\n  },\r\n  // Note: duotone not supported yet\r\n  phosphor: {\r\n    class: \"ph-{icon}-{type}\",\r\n    types: {\r\n      solid: \"\",\r\n    },\r\n  },\r\n};\r\n\r\n/**\r\n * @var {IntersectionObserver}\r\n */\r\nconst observer = new window.IntersectionObserver((entries, observerRef) => {\r\n  entries.forEach(async (entry) => {\r\n    if (entry.isIntersecting) {\r\n      observerRef.unobserve(entry.target);\r\n      entry.target.init();\r\n    }\r\n  });\r\n});\r\n\r\n/**\r\n * @param {string} value\r\n * @param {string} iconName\r\n * @param {string} iconSet\r\n * @param {string} iconType\r\n * @return {string}\r\n */\r\nfunction replacePlaceholders(value, iconName, iconSet, iconType) {\r\n  let iconPrefix = (options.prefixes[iconSet] && options.prefixes[iconSet][iconType]) || null;\r\n  value = value.replace(\"{icon}\", iconName);\r\n  if (iconType) {\r\n    value = value.replaceAll(\"{type}\", iconType);\r\n  } else {\r\n    // Maybe we want to remove the type like in material icons\r\n    value = value.replace(\"-{type}\", \"\");\r\n  }\r\n  if (iconPrefix) {\r\n    value = value.replace(\"{prefix}\", iconPrefix);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction log(message) {\r\n  if (!options.debug) {\r\n    return;\r\n  }\r\n  console.log(\"[l-i] \" + message);\r\n}\r\n\r\n/**\r\n * @param {string} iconName\r\n * @param {string} iconSet\r\n * @param {string} iconType\r\n * @return {Promise<String, Error>}\r\n */\r\nfunction getIconSvg(iconName, iconSet, iconType) {\r\n  let iconUrl = options.paths[iconSet];\r\n  let cacheKey = iconSet + \"-\" + iconName;\r\n  if (iconType) {\r\n    cacheKey += \"-\" + iconType;\r\n  }\r\n  if (!iconUrl) {\r\n    return new Promise(() => {\r\n      console.error(`Icon set ${iconSet} does not exists`);\r\n    });\r\n  }\r\n\r\n  iconUrl = replacePlaceholders(iconUrl, iconName, iconSet, iconType);\r\n\r\n  // If we have it in cache\r\n  if (iconUrl && CACHE[cacheKey]) {\r\n    log(\"Fetching \" + cacheKey + \" from cache\");\r\n    return CACHE[cacheKey];\r\n  }\r\n\r\n  // Or resolve\r\n  log(\"Fetching \" + cacheKey + \" from url \" + iconUrl);\r\n  CACHE[cacheKey] = fetch(iconUrl).then(function (response) {\r\n    if (response.ok) {\r\n      return response.text();\r\n    }\r\n    throw Error(response.status);\r\n  });\r\n  return CACHE[cacheKey];\r\n}\r\n\r\n/**\r\n * @param {LastIcon} inst\r\n * @param {string} iconName\r\n * @param {string} iconSet\r\n * @param {string} iconType\r\n */\r\nfunction refreshIcon(inst, iconName, iconSet, iconType) {\r\n  // Replace name\r\n  if (options.replaceName[iconName]) {\r\n    iconName = options.replaceName[iconName];\r\n  }\r\n\r\n  // Use font\r\n  if (options.fonts.includes(iconSet)) {\r\n    log(\"Using font for \" + iconName);\r\n    let iconClass = FONT_ICONS[iconSet][\"class\"];\r\n    let nameAsClass = iconClass.includes(\"{icon}\");\r\n    let fontType = iconType;\r\n    if (FONT_ICONS[iconSet][\"types\"] && iconType in FONT_ICONS[iconSet][\"types\"]) {\r\n      fontType = FONT_ICONS[iconSet][\"types\"][iconType];\r\n    }\r\n    iconClass = replacePlaceholders(iconClass, iconName, iconSet, fontType);\r\n    if (nameAsClass) {\r\n      inst.innerHTML = '<i class=\"' + iconClass + '\"></i>';\r\n    } else {\r\n      inst.innerHTML = '<i class=\"' + iconClass + '\">' + iconName + \"</i>\";\r\n    }\r\n    if (inst.stroke && options.opticalFont.includes(inst.set)) {\r\n      inst.style.setProperty(\"--weight\", inst.stroke * 100);\r\n    }\r\n    return; // Return early\r\n  }\r\n\r\n  getIconSvg(iconName, iconSet, iconType)\r\n    .then((iconData) => {\r\n      // Strip class attribute as it may be affected by css\r\n      if (iconData.includes(\"class=\")) {\r\n        iconData = iconData.replace(/ class=\"([a-z- ]*)\"/g, \"\");\r\n      }\r\n      // Add and/or fix stroke\r\n      if (inst.stroke || options.fixStroke.includes(inst.set)) {\r\n        iconData = iconData.replace(/stroke-width=\"([0-9]*)\"/g, 'stroke-width=\"' + inst.stroke + '\"');\r\n      }\r\n      // Fix fill to currentColor\r\n      if (options.fixFill.includes(inst.set)) {\r\n        iconData = iconData.replace(/(<svg.*?)>/, '$1 fill=\"currentColor\">');\r\n      }\r\n      // Fix viewbox if missing to allow easy sizing\r\n      if (options.fixViewbox.includes(inst.set) && !iconData.includes(\"viewBox\")) {\r\n        const size = options.viewboxes[iconSet] || 24;\r\n        iconData = iconData.replace(/(<svg.*?)>/, '$1 viewBox=\"0 0 ' + size + \" \" + size + '\">');\r\n      }\r\n      // If we have some html, pass it along (useful for svg anim)\r\n      if (inst.defaultHTML) {\r\n        iconData = iconData.replace(\"</svg>\", inst.defaultHTML + \"</svg>\");\r\n      }\r\n      inst.innerHTML = iconData;\r\n    })\r\n    .catch((error) => {\r\n      inst.innerHTML = \"<span>\u26A0\uFE0F</span>\";\r\n      console.error(`Failed to load icon ${iconName} (error ${error})`);\r\n    });\r\n}\r\n\r\nclass LastIcon extends HTMLElement {\r\n  /**\r\n   * @param {object} opts\r\n   * @returns {Options} The updated option object\r\n   */\r\n  static configure(opts = {}) {\r\n    for (const k in opts) {\r\n      // Check first for isArray because typeof array is also object\r\n      if (Array.isArray(opts[k])) {\r\n        options[k] = options[k].concat(opts[k]);\r\n      } else if (typeof opts[k] === \"object\") {\r\n        options[k] = Object.assign(options[k], opts[k]);\r\n      } else {\r\n        options[k] = opts[k];\r\n      }\r\n    }\r\n    // Log after we had the opportunity to change debug flag\r\n    log(\"configuring options\");\r\n    return options;\r\n  }\r\n\r\n  get type() {\r\n    return this.getAttribute(\"type\") || options.defaultTypes[this.set];\r\n  }\r\n\r\n  get set() {\r\n    let v = this.getAttribute(\"set\") || options.defaultSet;\r\n    return options.aliases[v] ?? v;\r\n  }\r\n\r\n  get stroke() {\r\n    let v = this.getAttribute(\"stroke\");\r\n    if (!v && options.strokeSet.includes(this.set)) {\r\n      v = options.defaultStroke;\r\n    }\r\n    return v;\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return [\"name\", \"stroke\", \"size\", \"set\", \"type\"];\r\n  }\r\n\r\n  connectedCallback() {\r\n    // innerHTML is not available because not parsed yet\r\n    setTimeout(() => {\r\n      // Do this is setTimeout to allow whenDefined to kick in before\r\n      // otherwise it cannot be configured\r\n      if (options.lazy) {\r\n        // observer will call init when element is visible\r\n        observer.observe(this);\r\n      } else {\r\n        // init directly\r\n        this.init();\r\n      }\r\n    });\r\n  }\r\n\r\n  init() {\r\n    // Store default content as we will inject it back later\r\n    this.defaultHTML = this.innerHTML;\r\n    this.loadIcon();\r\n  }\r\n\r\n  loadIcon() {\r\n    const name = this.getAttribute(\"name\");\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    // Clear icon\r\n    this.innerHTML = \"\";\r\n    // Useful for customizing size in css\r\n    if (this.hasAttribute(\"size\")) {\r\n      this.setSize(this.getAttribute(\"size\"));\r\n    }\r\n    if (name) {\r\n      refreshIcon(this, name, this.set, this.type);\r\n    }\r\n  }\r\n\r\n  setSize(size) {\r\n    this.style.setProperty(\"--size\", size + \"px\");\r\n    if (options.opticalFont.includes(this.set)) {\r\n      this.style.setProperty(\"--opsz\", size);\r\n    }\r\n  }\r\n\r\n  attributeChangedCallback(attr, oldVal, newVal) {\r\n    // Wait until properly loaded for the first time\r\n    if (typeof this.defaultHTML !== \"string\") {\r\n      return;\r\n    }\r\n    log(\"Attr \" + attr + \" changed from \" + oldVal + \" to \" + newVal);\r\n    if (attr === \"size\") {\r\n      this.setSize(newVal);\r\n    } else if (newVal) {\r\n      this.log(\"attribute changed\");\r\n      this.loadIcon();\r\n    }\r\n  }\r\n}\r\n\r\ncustomElements.define(\"l-i\", LastIcon);\r\n"],
  "mappings": "MAAA,GAAM,GAAW,4BAmBX,EAAU,CACd,MAAO,GACP,KAAM,GACN,YAAa,CAAC,EACd,QAAS,CACP,GAAI,YACJ,GAAI,WACJ,GAAI,QACJ,GAAI,QACJ,GAAI,SACJ,GAAI,cACJ,GAAI,YACJ,GAAI,WACJ,GAAI,UACJ,GAAI,QACJ,GAAI,UACJ,GAAI,MACJ,GAAI,UACJ,GAAI,WACJ,GAAI,WACJ,GAAI,SACN,EACA,MAAO,CAAC,EACR,UAAW,CACT,SAAU,GACV,QAAS,EACX,EACA,aAAc,CACZ,SAAU,QACV,YAAa,QACb,SAAU,WACV,MAAO,MACP,IAAK,QACL,SAAU,UACV,QAAS,UACX,EACA,SAAU,CACR,SAAU,CACR,MAAO,MACP,QAAS,KACT,MAAO,KACT,EACA,YAAa,CACX,MAAO,MACP,QAAS,MACT,MAAO,MACP,QAAS,MACT,OAAQ,KACV,CACF,EACA,WAAY,SACZ,cAAe,EACf,MAAO,CACL,UAAW,EAAW,yCAEtB,SAAU,EAAW,gDACrB,MAAO,EAAW,oCAClB,OAAQ,EAAW,uCAEnB,YAAa,EAAW,6DACxB,SAAU,EAAW,6CACrB,UAAW,EAAW,iDAEtB,SAAU,EAAW,kDAErB,MAAO,EAAW,oDAClB,QAAS,EAAW,gCACpB,QAAS,EAAW,yCAEpB,IAAK,EAAW,gDAChB,QAAS,EAAW,4CAEpB,SAAU,EAAW,iDAErB,SAAU,EAAW,qEAErB,QAAS,EAAW,wDACtB,EACA,QAAS,CAAC,WAAY,WAAY,cAAe,MAAO,WAAY,SAAS,EAC7E,UAAW,CAAC,UAAU,EACtB,WAAY,CAAC,WAAY,SAAS,EAClC,UAAW,CAAC,SAAU,UAAU,EAChC,YAAa,CAAC,SAAS,CACzB,EAEM,EAAQ,CAAC,EACT,EAAa,CACjB,SAAU,CACR,MAAO,wBACP,MAAO,CACL,SAAU,GACV,QAAS,WACT,QAAS,UACX,CACF,EACA,QAAS,CACP,MAAO,yBACT,EACA,SAAU,CACR,MAAO,oBACT,EACA,UAAW,CACT,MAAO,WACT,EACA,YAAa,CACX,MAAO,oBACT,EACA,QAAS,CACP,MAAO,gBACT,EACA,IAAK,CACH,MAAO,mBACP,MAAO,CACL,MAAO,EACT,CACF,EAEA,SAAU,CACR,MAAO,mBACP,MAAO,CACL,MAAO,EACT,CACF,CACF,EAKM,EAAW,GAAI,QAAO,qBAAqB,CAAC,EAAS,IAAgB,CACzE,EAAQ,QAAQ,KAAO,IAAU,CAC/B,AAAI,EAAM,gBACR,GAAY,UAAU,EAAM,MAAM,EAClC,EAAM,OAAO,KAAK,EAEtB,CAAC,CACH,CAAC,EASD,WAA6B,EAAO,EAAU,EAAS,EAAU,CAC/D,GAAI,GAAc,EAAQ,SAAS,IAAY,EAAQ,SAAS,GAAS,IAAc,KACvF,SAAQ,EAAM,QAAQ,SAAU,CAAQ,EACxC,AAAI,EACF,EAAQ,EAAM,WAAW,SAAU,CAAQ,EAG3C,EAAQ,EAAM,QAAQ,UAAW,EAAE,EAEjC,GACF,GAAQ,EAAM,QAAQ,WAAY,CAAU,GAEvC,CACT,CAEA,WAAa,EAAS,CACpB,AAAI,CAAC,EAAQ,OAGb,QAAQ,IAAI,SAAW,CAAO,CAChC,CAQA,WAAoB,EAAU,EAAS,EAAU,CAC/C,GAAI,GAAU,EAAQ,MAAM,GACxB,EAAW,EAAU,IAAM,EAI/B,MAHI,IACF,IAAY,IAAM,GAEhB,AAAC,EAML,GAAU,EAAoB,EAAS,EAAU,EAAS,CAAQ,EAG9D,GAAW,EAAM,GACnB,GAAI,YAAc,EAAW,aAAa,EACnC,EAAM,IAIf,GAAI,YAAc,EAAW,aAAe,CAAO,EACnD,EAAM,GAAY,MAAM,CAAO,EAAE,KAAK,SAAU,EAAU,CACxD,GAAI,EAAS,GACX,MAAO,GAAS,KAAK,EAEvB,KAAM,OAAM,EAAS,MAAM,CAC7B,CAAC,EACM,EAAM,KArBJ,GAAI,SAAQ,IAAM,CACvB,QAAQ,MAAM,YAAY,mBAAyB,CACrD,CAAC,CAoBL,CAQA,WAAqB,EAAM,EAAU,EAAS,EAAU,CAOtD,GALI,EAAQ,YAAY,IACtB,GAAW,EAAQ,YAAY,IAI7B,EAAQ,MAAM,SAAS,CAAO,EAAG,CACnC,EAAI,kBAAoB,CAAQ,EAChC,GAAI,GAAY,EAAW,GAAS,MAChC,EAAc,EAAU,SAAS,QAAQ,EACzC,EAAW,EACf,AAAI,EAAW,GAAS,OAAY,IAAY,GAAW,GAAS,OAClE,GAAW,EAAW,GAAS,MAAS,IAE1C,EAAY,EAAoB,EAAW,EAAU,EAAS,CAAQ,EACtE,AAAI,EACF,EAAK,UAAY,aAAe,EAAY,SAE5C,EAAK,UAAY,aAAe,EAAY,KAAO,EAAW,OAE5D,EAAK,QAAU,EAAQ,YAAY,SAAS,EAAK,GAAG,GACtD,EAAK,MAAM,YAAY,WAAY,EAAK,OAAS,GAAG,EAEtD,MACF,CAEA,EAAW,EAAU,EAAS,CAAQ,EACnC,KAAK,AAAC,GAAa,CAclB,GAZI,EAAS,SAAS,QAAQ,GAC5B,GAAW,EAAS,QAAQ,uBAAwB,EAAE,GAGpD,GAAK,QAAU,EAAQ,UAAU,SAAS,EAAK,GAAG,IACpD,GAAW,EAAS,QAAQ,2BAA4B,iBAAmB,EAAK,OAAS,GAAG,GAG1F,EAAQ,QAAQ,SAAS,EAAK,GAAG,GACnC,GAAW,EAAS,QAAQ,aAAc,yBAAyB,GAGjE,EAAQ,WAAW,SAAS,EAAK,GAAG,GAAK,CAAC,EAAS,SAAS,SAAS,EAAG,CAC1E,GAAM,GAAO,EAAQ,UAAU,IAAY,GAC3C,EAAW,EAAS,QAAQ,aAAc,mBAAqB,EAAO,IAAM,EAAO,IAAI,CACzF,CAEA,AAAI,EAAK,aACP,GAAW,EAAS,QAAQ,SAAU,EAAK,YAAc,QAAQ,GAEnE,EAAK,UAAY,CACnB,CAAC,EACA,MAAM,AAAC,GAAU,CAChB,EAAK,UAAY,4BACjB,QAAQ,MAAM,uBAAuB,YAAmB,IAAQ,CAClE,CAAC,CACL,CAEA,mBAAuB,YAAY,OAK1B,WAAU,EAAO,CAAC,EAAG,CAC1B,OAAW,KAAK,GAEd,AAAI,MAAM,QAAQ,EAAK,EAAE,EACvB,EAAQ,GAAK,EAAQ,GAAG,OAAO,EAAK,EAAE,EACjC,AAAI,MAAO,GAAK,IAAO,SAC5B,EAAQ,GAAK,OAAO,OAAO,EAAQ,GAAI,EAAK,EAAE,EAE9C,EAAQ,GAAK,EAAK,GAItB,SAAI,qBAAqB,EAClB,CACT,IAEI,OAAO,CACT,MAAO,MAAK,aAAa,MAAM,GAAK,EAAQ,aAAa,KAAK,IAChE,IAEI,MAAM,CACR,GAAI,GAAI,KAAK,aAAa,KAAK,GAAK,EAAQ,WAC5C,MAAO,GAAQ,QAAQ,IAAM,CAC/B,IAEI,SAAS,CACX,GAAI,GAAI,KAAK,aAAa,QAAQ,EAClC,MAAI,CAAC,GAAK,EAAQ,UAAU,SAAS,KAAK,GAAG,GAC3C,GAAI,EAAQ,eAEP,CACT,WAEW,qBAAqB,CAC9B,MAAO,CAAC,OAAQ,SAAU,OAAQ,MAAO,MAAM,CACjD,CAEA,mBAAoB,CAElB,WAAW,IAAM,CAGf,AAAI,EAAQ,KAEV,EAAS,QAAQ,IAAI,EAGrB,KAAK,KAAK,CAEd,CAAC,CACH,CAEA,MAAO,CAEL,KAAK,YAAc,KAAK,UACxB,KAAK,SAAS,CAChB,CAEA,UAAW,CACT,GAAM,GAAO,KAAK,aAAa,MAAM,EACrC,AAAI,CAAC,GAKL,MAAK,UAAY,GAEb,KAAK,aAAa,MAAM,GAC1B,KAAK,QAAQ,KAAK,aAAa,MAAM,CAAC,EAEpC,GACF,EAAY,KAAM,EAAM,KAAK,IAAK,KAAK,IAAI,EAE/C,CAEA,QAAQ,EAAM,CACZ,KAAK,MAAM,YAAY,SAAU,EAAO,IAAI,EACxC,EAAQ,YAAY,SAAS,KAAK,GAAG,GACvC,KAAK,MAAM,YAAY,SAAU,CAAI,CAEzC,CAEA,yBAAyB,EAAM,EAAQ,EAAQ,CAE7C,AAAI,MAAO,MAAK,aAAgB,UAGhC,GAAI,QAAU,EAAO,iBAAmB,EAAS,OAAS,CAAM,EAChE,AAAI,IAAS,OACX,KAAK,QAAQ,CAAM,EACV,GACT,MAAK,IAAI,mBAAmB,EAC5B,KAAK,SAAS,GAElB,CACF,EAEA,eAAe,OAAO,MAAO,CAAQ",
  "names": []
}
